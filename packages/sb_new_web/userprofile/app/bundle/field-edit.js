!function(e){function t(s){if(i[s])return i[s].exports;var o=i[s]={exports:{},id:s,loaded:!1};return e[s].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t,i){"use strict";e.exports={el:"#field-edit",data:function(){return _.merge({field:{label:"",type:"",data:{value:[],data:{},classSfx:"",help_text:"",help_show:""}},form:{}},window.$data,window.$userprofile)},created:function(){-1!==this.type.required&&(this.field.data.required=this.type.required),-1!==this.type.multiple&&(this.field.data.multiple=this.type.multiple)},ready:function(){this.Fields=this.$resource("api/userprofile/field/{id}"),this.tab=UIkit.tab(this.$els.tab,{connect:this.$els.content})},methods:{save:function(){var e={field:this.field};this.$broadcast("save",e),this.Fields.save({id:this.field.id||0},e).then(function(e){this.field.id||window.history.replaceState({},"",this.$url.route("admin/userprofile/edit",{id:e.data.field.id})),this.$set("field",e.data.field),this.$notify(this.$trans("%type% saved.",{type:this.type.label}))},function(e){this.$notify(e.data,"danger")})}},components:{fieldbasic:i(16),fieldoptions:i(17),appearance:i(15)}},Vue.ready(e.exports)},function(e,t){"use strict";e.exports={props:["field"],computed:{appearanceSettings:function(){return this.field.type? SBFieldtypes.components[this.field.type].appearance|| SBFieldtypes.components[this.field.type].options.appearance:{}}}}},function(e,t){"use strict";e.exports={props:["field","type","roles","form"],computed:{fieldSettings:function(){var e=this.field.type? SBFieldtypes.components[this.field.type].settings|| SBFieldtypes.components[this.field.type].options.settings:{},t=this;return void 0!==e.template?(new Vue(_.merge({el:"#type-settings",name:"type-settings",parent:t,data:_.merge({field:t.field,form:t.form},e.data)},e)),!1):e}}}},function(e,t){"use strict";e.exports={props:["field","form"],methods:{addFieldoption:function(){this.field.options.push({value:"",text:"",attachValue:!0,invalid:!1}),this.$nextTick(function(){$(this.$els.optionsNestable).find("input:last").focus()})},deleteFieldoption:function(e){this.field.options.$remove(e),this.checkDuplicates()},checkDuplicates:function(){var e,t=[];_.sortBy(this.field.options,"value").forEach(function(i){e&&e===i.value&&t.push(i.value),e=i.value}),this.field.options.forEach(function(e){e.invalid=t.indexOf(e.value)>-1?"Duplicate value":!1})}},ready:function(){var e=this;UIkit.nestable(this.$els.optionsNestable,{maxDepth:1,handleClass:"uk-nestable-handle",group:"userprofile.selectoptions"}).on("change.uk.nestable",function(t,i,s,o){if(o&&"removed"!==o){var n=[];_.forEach(i.list(),function(t){n.push(_.find(e.field.options,"value",t.value))}),e.$set("field.options",n)}})},components:{selectoption:{props:["selectoption","index"],template:'<li class="uk-nestable-item" data-value="{{ selectoption.value }}">\n    <div class="uk-nestable-panel uk-visible-hover uk-form uk-flex uk-flex-middle">\n        <div class="uk-flex-item-1">\n            <div class="uk-form-row">\n                <small class="uk-form-label uk-text-muted uk-text-truncate" style="text-transform: none"\n                       v-show="selectoption.attachValue"\n                       :class="{\'uk-text-danger\': selectoption.invalid}">{{ selectoption.value }}</small>\n                <span class="uk-form-label" v-show="!selectoption.attachValue">\n                    <input type="text" class="uk-form-small"\n                           @keyup="safeValue(true)"\n                           :class="{\'uk-text-danger\': selectoption.invalid}"\n                           v-model="selectoption.value"/></span>\n                <div class="uk-form-controls">\n                    <input type="text" class="uk-form-width-large" v-model="selectoption.text"/></div>\n                <p class="uk-form-help-block uk-text-danger" v-show="selectoption.invalid">{{ selectoption.invalid | trans }}</p>\n\n            </div>\n        </div>\n        <div class="">\n            <ul class="uk-subnav pk-subnav-icon">\n                <li><a class="uk-icon uk-margin-small-top pk-icon-hover uk-invisible"\n                       data-uk-tooltip="{delay: 500}" title="{{ \'Link/Unlink value from label\' | trans }}"\n                       :class="{\'uk-icon-link\': !selectoption.attachValue, \'uk-icon-chain-broken\': selectoption.attachValue}"\n                       @click="selectoption.attachValue = !selectoption.attachValue"></a></li>\n                <li><a class="pk-icon-delete pk-icon-hover uk-invisible" @click="$parent.deleteFieldoption(selectoption)"></a></li>\n                <li><a class="pk-icon-move pk-icon-hover uk-invisible uk-nestable-handle"></a></li>\n            </ul>\n        </div>\n    </div>\n</li>   \n',methods:{safeValue:function(e){this.selectoption.value=_.escape(_.snakeCase(this.selectoption.value)),e&&this.$parent.checkDuplicates()}},watch:{"selectoption.text":function(e){this.selectoption.attachValue&&(this.selectoption.value=_.escape(_.snakeCase(e))),this.$parent.checkDuplicates()}}}}}},,,,,,function(e,t){e.exports="<div class=uk-form-horizontal> <partial name=fieldtype-appearance></partial> <sb-fields :config=appearanceSettings :values.sync=field.data></sb-fields> </div>"},function(e,t){e.exports='<div class=uk-margin> <div class=uk-grid> <div class="uk-width-medium-3-4 uk-form-horizontal"> <partial name=fieldtype-basic></partial> <fieldtypes class=uk-margin v-show="!type.hasOptions || field.options.length" v-ref:fieldtypes :edit-type=field.type :fields=[field] :field.sync=field :form=form></fieldtypes> <div id=type-settings class=uk-margin :data-object.sync=field.data :field.sync=field :form=form></div> </div> <div class="uk-width-medium-1-4 uk-form-stacked"> <partial name=fieldtype-settings></partial> </div> </div> </div>'},function(e,t){e.exports='<div class=uk-form-horizontal> <div class=uk-form-row> <span class=uk-form-label>{{ \'Manage options\' | trans }}</span> <div class="uk-form-controls uk-form-controls-text"> <ul class="uk-nestable uk-margin-remove" v-el:options-nestable v-show=field.options.length> <selectoption v-for="selectoption in field.options" :selectoption=selectoption></selectoption> </ul> <button type=button class="uk-button uk-button-primary uk-button-small uk-margin" @click=addFieldoption>{{ \'Add option\' | trans }} </button> </div> </div> </div>'},,,,function(e,t,i){var s,o;s=i(1),o=i(9),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t,i){var s,o;s=i(2),o=i(10),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t,i){var s,o;s=i(3),o=i(11),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)}]);