!function(e){function t(s){if(i[s])return i[s].exports;var o=i[s]={exports:{},id:s,loaded:!1};return e[s].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t,i){"use strict";e.exports={el:"#form-edit",data:function(){return _.merge({formitem:{data:{value:"",classSfx:"",user_email_field:!1,submitEmail:window.$data.config.from_address,email_subject:this.$trans("Thank you for your submission"),thankyou_markdown:!0,email_body_markdown:!0,afterSubmit:"thankyou",submitButton:this.$trans("Submit"),formStyle:"uk-form-stacked"}},editid:"",form:{}},window.$data)},ready:function(){this.Forms=this.$resource("api/formmaker/form{/id}"),this.tab=UIkit.tab(this.$els.tab,{connect:this.$els.content})},events:{"close.editmodal":function(){this.$refs.formfields.load()}},computed:{formfields:function(){return this.$refs.formfields?this.$refs.formfields.fields:[]}},methods:{save:function(){var e={formitem:this.formitem};this.$broadcast("save",e),this.Forms.save({id:this.formitem.id},e).then(function(t){e=t.data,this.formitem.id||window.history.replaceState({},"",this.$url.route("admin/formmaker/form/edit",{id:e.formitem.id})),this.$set("formitem",e.formitem),this.$notify(this.$trans("Form %title% saved.",{title:this.formitem.title}))},function(e){this.$notify(e,"danger")})},editFormField:function(e){this.editid=e,this.$refs.editmodal.open()}},components:{formbasic:i(42),formfields:i(44),appearance:i(41),submission:i(45),emailsettings:i(43),fieldedit:i(39)}},i(1)(Vue),Vue.ready(e.exports)},function(e,t){"use strict";e.exports=function(e){e.filter("datetime",function(e){return"string"==typeof e&&(e=new Date(e)),e?this.$date(e,"mediumDate")+", "+this.$date(e,"HH:mm:ss"):""}),e.filter("shortcode",function(e,t){return"$$ "+e+":"+t+" $$"})}},function(e,t,i){var s,o;s=i(11),o=i(28),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t){"use strict";e.exports={props:["field","form"],computed:{hasAppearanceSettings:function(){return _.size(this.appearanceSettings)>0},appearanceSettings:function(){return this.field.type?SBFieldtypes.components[this.field.type].appearance||SBFieldtypes.components[this.field.type].options.appearance:{}}}}},function(e,t){"use strict";e.exports={props:["field","type","roles","form"],computed:{fieldSettings:function(){var e=this.field.type?SBFieldtypes.components[this.field.type].settings||SBFieldtypes.components[this.field.type].options.settings:{},t=this;return void 0!==e.template?(new Vue(_.merge({el:"#type-settings",name:"type-settings",parent:t,data:_.merge({field:t.field,form:t.form},e.data)},e)),!1):e}}}},function(e,t,i){"use strict";e.exports={data:function(){return{loaded:!1,type:{label:""},field:{label:"",type:"",priority:0,form_id:0,data:{value:[],data:{},classSfx:"",help_text:"",help_show:""}},roles:[]}},props:["formitem","form","fieldid"],created:function(){this.Fields=this.$resource("api/formmaker/field/edit"),this.Field=this.$resource("api/formmaker/field{/id}")},ready:function(){var e=this;this.Fields.query({id:this.fieldid}).then(function(t){e.$set("field",t.data.field),e.$set("type",t.data.type),e.$set("roles",t.data.roles),e.field.form_id=e.formitem.id,e.loaded=!0})},beforeDestroy:function(){this.$dispatch("close.editmodal")},methods:{save:function(){var e=this,t={field:this.field};this.$broadcast("save",t),this.Field.save({id:this.field.id},t).then(function(t){e.$set("field",t.data.field),e.$notify(e.$trans("%type% saved.",{type:e.type.label}))},function(t){return e.$notify(t.data.message||t.data,"danger")})},formFieldInvalid:function(e){console.log(this.$parent),console.log(this.$validator.validators)}},components:{fieldbasic:i(38),fieldoptions:i(40),appearance:i(37)}}},function(e,t){"use strict";e.exports={props:["field","form"],methods:{addFieldoption:function(){var e=this;this.field.options.push({value:"",text:"",attachValue:!0,invalid:!1}),this.$nextTick(function(){return $(e.$els.optionsNestable).find("input:last").focus()})},deleteFieldoption:function(e){this.field.options.$remove(e),this.checkDuplicates()},checkDuplicates:function(){var e,t=[];_.sortBy(this.field.options,"value").forEach(function(i){e&&e===i.value&&t.push(i.value),e=i.value}),this.field.options.forEach(function(e){e.invalid=t.indexOf(e.value)>-1?"Duplicate value":!1})}},ready:function(){if(!this.readOnly){var e=this;UIkit.nestable(this.$els.optionsNestable,{maxDepth:1,handleClass:"uk-nestable-handle",group:"formmaker.selectoptions"}).on("change.uk.nestable",function(t,i,s,o){if(o&&"removed"!==o){var a=[];_.forEach(i.list(),function(t){a.push(_.find(e.field.options,"value",t.value))}),e.$set("field.options",a)}})}},computed:{readOnly:function(){return!!this.field.data.readonlyOptions}},components:{selectoption:{template:'<li class="uk-nestable-item" data-value="{{ selectoption.value }}">\n    <div v-if="!readOnly" class="uk-nestable-panel uk-visible-hover uk-form uk-flex uk-flex-middle">\n        <div class="uk-flex-item-1">\n            <div class="uk-form-row">\n                <small class="uk-form-label uk-text-muted uk-text-truncate" style="text-transform: none"\n                       v-show="selectoption.attachValue"\n                       :class="{\'uk-text-danger\': selectoption.invalid}">{{ selectoption.value }}</small>\n                <span class="uk-form-label" v-show="!selectoption.attachValue">\n                    <input type="text" class="uk-form-small"\n                           @keyup="safeValue(true)"\n                           :class="{\'uk-text-danger\': selectoption.invalid}"\n                           v-model="selectoption.value"/></span>\n                <div class="uk-form-controls">\n                    <input type="text" class="uk-form-width-large" v-model="selectoption.text"/></div>\n                <p class="uk-form-help-block uk-text-danger" v-show="selectoption.invalid">{{ selectoption.invalid | trans }}</p>\n\n            </div>\n        </div>\n        <div class="">\n            <ul class="uk-subnav pk-subnav-icon">\n                <li><a class="uk-icon uk-margin-small-top pk-icon-hover uk-invisible"\n                       data-uk-tooltip="{delay: 500}" :title="\'Link/Unlink value from label\' | trans"\n                       :class="{\'uk-icon-link\': !selectoption.attachValue, \'uk-icon-chain-broken\': selectoption.attachValue}"\n                       @click.prevent="selectoption.attachValue = !selectoption.attachValue"></a></li>\n                <li><a class="pk-icon-delete pk-icon-hover uk-invisible" @click="$parent.deleteFieldoption(selectoption)"></a></li>\n                <li><a class="pk-icon-move pk-icon-hover uk-invisible uk-nestable-handle"></a></li>\n            </ul>\n        </div>\n    </div>\n    <div v-else>\n        {{ selectoption.text }}\n    </div>\n</li>   \n',props:["selectoption","readOnly"],methods:{safeValue:function(e){this.selectoption.value=_.escape(_.snakeCase(this.selectoption.value)),e&&this.$parent.checkDuplicates()}},watch:{"selectoption.text":function(e){this.selectoption.attachValue&&(this.selectoption.value=_.escape(_.snakeCase(e))),this.$parent.checkDuplicates()}}}}}},function(e,t){"use strict";e.exports={props:["formitem","form"],data:function(){return{recaptcha_themes:[{value:"",text:this.$trans("- Style -")},{value:"light",text:this.$trans("Light")},{value:"dark",text:this.$trans("Dark")}],recaptcha_types:[{value:"",text:this.$trans("- Type -")},{value:"image",text:this.$trans("Image")},{value:"audio",text:this.$trans("Audio")}],recaptcha_sizes:[{value:"",text:this.$trans("- Size -")},{value:"normal",text:this.$trans("Normal")},{value:"compact ",text:this.$trans("Compact")}]}},created:function(){this.formitem.data.recaptcha_theme=this.formitem.data.recaptcha_theme||"",this.formitem.data.recaptcha_type=this.formitem.data.recaptcha_type||"",this.formitem.data.recaptcha_size=this.formitem.data.recaptcha_size||""}}},function(e,t){"use strict";e.exports={props:["formitem","config","form"]}},function(e,t,i){"use strict";e.exports={props:["formitem","formfields","form"],components:{formfieldslist:i(2)}}},function(e,t){"use strict";e.exports={props:["formitem","types","form"],data:function(){return{fields:[],selected:[],editid:""}},created:function(){this.Fields=this.$resource("api/formmaker/field{/id}"),this.load()},ready:function(){var e=this;UIkit.nestable(this.$els.nestable,{maxDepth:20,group:"formmaker.fields"}).on("change.uk.nestable",function(t,i,s,o){o&&"removed"!==o&&e.Fields.save({id:"updateOrder"},{fields:i.list()}).then(e.load,function(){this.$notify("Reorder failed.","danger")})})},methods:{load:function(){var e=this;return this.Fields.query({form_id:this.formitem.id}).then(function(t){e.$set("fields",t.data),e.$set("selected",[])})},toggleRequired:function(e){var t=this;e.data.required=e.data.required?0:1,this.Fields.save({id:e.id},{field:e}).then(function(){this.load(),this.$notify("Field saved.")},function(e){t.load(),t.$notify(e.data,"danger")})},getSelected:function(){return this.fields.filter(function(e){return this.isSelected(e)},this)},isSelected:function(e){return-1!==this.selected.indexOf(e.id.toString())},toggleSelect:function(e){var t=this.selected.indexOf(e.id.toString());-1==t?this.selected.push(e.id.toString()):this.selected.splice(t,1)},getFieldType:function(e){return _.find(this.types,"id",e.type)},removeFields:function(){this.Fields["delete"]({id:"bulk"},{ids:this.selected}).then(function(){this.load(),this.$notify("Field(s) deleted.")})}},components:{"form-field":{props:["field"],template:"#field",computed:{type:function(){return this.$parent.getFieldType(this.field)}}}},mixins:[window.SBFieldtypes]}},function(e,t){"use strict";e.exports={props:["fields"]}},function(e,t,i){"use strict";e.exports={props:["formitem","formfields","form"],components:{formfieldslist:i(2)}}},,,,,,,,function(e,t){e.exports="<div class=uk-form-horizontal> <partial name=fieldtype-appearance></partial> <sb-fields v-if=hasAppearanceSettings :config=appearanceSettings :values.sync=field.data></sb-fields> </div>"},function(e,t){e.exports='<div class=uk-margin> <div class=uk-grid> <div class="uk-width-medium-3-4 uk-form-horizontal"> <partial name=fieldtype-basic></partial> <fieldtypes class=uk-margin v-show="!type.hasOptions || field.options.length" v-ref:fieldtypes :edit-type=field.type :fields=[field] :field.sync=field :form=form></fieldtypes> <div id=type-settings class=uk-margin :data-object.sync=field.data :field.sync=field :form=form></div> </div> <div class="uk-width-medium-1-4 uk-form-stacked"> <partial name=fieldtype-settings></partial> </div> </div> </div>'},function(e,t){e.exports="<div> <div class=uk-modal-spinner v-if=!loaded></div> <form v-else id=field-edit class=uk-form name=fieldform v-validator=form @submit.prevent=\"save | valid\"> <div class=\"uk-margin uk-flex uk-flex-space-between uk-flex-wrap\" data-uk-margin> <div data-uk-margin> <h2 class=uk-margin-remove v-if=field.id>{{ 'Edit' | trans }} {{ type.label }} <em>{{ field.label | trans }}</em></h2> <h2 class=uk-margin-remove v-if=!field.id>{{ 'Add' | trans }} {{ type.label }} <em>{{ field.label | trans }}</em></h2> </div> <div data-uk-margin> <a class=\"uk-button uk-margin-small-right uk-modal-close\">{{ field.id ? 'Close' : 'Cancel' | trans }}</a> <button class=\"uk-button uk-button-primary\" type=submit>{{ 'Save' | trans }}</button> </div> </div> <ul class=uk-tab data-uk-tab=\"connect:'#field-edit-switcher'\"> <li><a>{{ type.label | trans }}</a></li> <li v-if=type.hasOptions><a>{{ 'Options' | trans }}</a></li> <li><a>{{ 'Appearance' | trans }}</a></li> </ul> <div id=field-edit-switcher class=\"uk-switcher uk-margin\"> <div> <fieldbasic :field.sync=field :type.sync=type :roles=roles :form=form></fieldbasic> </div> <div v-if=type.hasOptions> <fieldoptions :field.sync=field :form=form></fieldoptions> </div> <div> <appearance :field.sync=field :form=form></appearance> </div> </div> </form> </div>"},function(e,t){e.exports='<div class=uk-form-horizontal> <div class=uk-form-row> <span class=uk-form-label>{{ \'Manage options\' | trans }}</span> <div class="uk-form-controls uk-form-controls-text"> <ul class="uk-nestable uk-margin-remove" v-el:options-nestable v-show=field.options.length> <selectoption v-for="selectoption in field.options" :selectoption.sync=selectoption :read-only=readOnly></selectoption> </ul> <button v-if=!readOnly type=button class="uk-button uk-button-primary uk-button-small uk-margin" @click=addFieldoption>{{ \'Add option\' | trans }} </button> </div> </div> </div>'},function(e,t){e.exports="<div class=uk-form-horizontal> <div class=uk-form-row> <span class=uk-form-label>{{ 'Title' | trans }}</span> <div class=\"uk-form-controls uk-form-controls-text\"> <label><input type=checkbox value=hide-title v-model=formitem.data.hide_title> {{ 'Hide Title' | trans }}</label> </div> </div> <div class=uk-form-row> <label for=form-formstyle class=uk-form-label>{{ 'Form style' | trans }}</label> <div class=uk-form-controls> <select id=form-formstyle class=uk-form-width-large v-model=formitem.data.formStyle> <option value=uk-form-stacked>{{ 'Form stacked' | trans }}</option> <option value=uk-form-horizontal>{{ 'Form horizontal' | trans }}</option> </select> </div> </div> <div class=uk-form-row> <label for=form-class class=uk-form-label>{{ 'Class suffix' | trans }}</label> <div class=uk-form-controls> <input id=form-class class=uk-form-width-large type=text v-model=formitem.data.classSfx value=quiz-over-video> </div> </div> <div class=uk-form-row> <label for=form-submit-button class=uk-form-label>{{ 'Text submit button' | trans }}</label> <div class=uk-form-controls> <input id=form-submit-button class=uk-form-width-large type=text v-model=formitem.data.submitButton> </div> </div> <div class=uk-form-row v-show=formitem.data.required> <label for=form-required-error class=uk-form-label>{{ 'Required error message' | trans }}</label> <div class=uk-form-controls> <input id=form-required-error class=uk-form-width-large type=text v-model=formitem.data.requiredError> </div> </div> <div class=uk-margin v-show=formitem.data.recaptcha> <div class=uk-form-row> <label for=form-recaptcha_label class=uk-form-label>{{ 'reCAPTCHA label' | trans }}</label> <div class=uk-form-controls> <input id=form-recaptcha_label class=uk-form-width-large type=text name=recaptcha_label v-model=formitem.data.recaptcha_label placeholder=\"{{ 'Empty for no label' | trans }}\"> </div> </div> <div class=uk-form-row> <label for=form-recaptcha_label class=uk-form-label>{{ 'reCAPTCHA setup' | trans }}</label> <div class=uk-form-controls> <select class=uk-form-width-small v-model=formitem.data.recaptcha_theme> <option v-for=\"option in recaptcha_themes\" :value=option.value>{{ option.text }}</option> </select> <select class=uk-form-width-small v-model=formitem.data.recaptcha_type> <option v-for=\"option in recaptcha_types\" :value=option.value>{{ option.text }}</option> </select> <select class=uk-form-width-small v-model=formitem.data.recaptcha_size> <option v-for=\"option in recaptcha_sizes\" :value=option.value>{{ option.text }}</option> </select> </div> </div> </div> </div>"},function(e,t){e.exports="<div class=\"uk-form-horizontal uk-margin\"> <div class=uk-form-row> <label for=form-title class=uk-form-label>{{ 'Title' | trans }}</label> <div class=uk-form-controls> <input id=form-title class=uk-form-width-large type=text name=title v-model=formitem.title v-validate:required> </div> <p class=\"uk-form-help-block uk-text-danger\" v-show=form.title.invalid>{{ 'Please enter a title' | trans }}</p> </div> <div class=uk-form-row> <label for=form-slug class=uk-form-label>{{ 'Slug' | trans }}</label> <div class=uk-form-controls> <input id=form-slug class=uk-form-width-large type=text v-model=formitem.slug> </div> </div> <div class=uk-form-row> <label for=form-status class=uk-form-label>{{ 'Status' | trans }}</label> <div class=uk-form-controls> <select id=form-status class=uk-form-width-large v-model=formitem.status number> <option value=0>{{ 'Disabled' | trans }}</option> <option value=1>{{ 'Enabled' | trans }}</option> </select> </div> </div> <div class=uk-form-row> <span class=uk-form-label>{{ 'Google reCAPTCHA' | trans }}</span> <div class=\"uk-form-controls uk-form-controls-text\"> <label v-show=\"config.recaptha_sitekey && config.recaptha_secret_key\"> <input type=checkbox value=hide-title v-model=formitem.data.recaptcha> {{ 'Use reCAPTCHA' | trans }}</label> <a v-else class=uk-link-muted :href=\"$url.route('admin/system/package/extensions')\">{{ 'Enter reCAPTCHA keys in the extension settings' | trans }}</a> </div> </div> </div>"},function(e,t){e.exports="<div class=\"uk-form-horizontal uk-margin\"> <div class=uk-grid> <div class=uk-width-medium-3-4> <div class=uk-form-row> <label for=form-user_email_field class=uk-form-label>{{ 'User email field' | trans }}</label> <div class=uk-form-controls> <select id=form-user_email_field class=uk-form-width-medium v-model=formitem.data.user_email_field> <option value=\"\">{{ 'Select a field' | trans }}</option> <option v-for=\"field in formfields | filterBy 'email' in 'type'\" :value=field.slug>{{ field.label }}</option> </select> </div> </div> <div class=uk-form-row> <span class=uk-form-label>{{ 'Reply to' | trans }}</span> <div class=\"uk-form-controls uk-form-controls-text\"> <label> <input type=checkbox value=use_replyto v-model=formitem.data.use_replyto> {{ 'Use as reply-to address for email' | trans }}</label> </div> </div> <div class=uk-alert v-show=formitem.data.user_email_field> {{ 'Email address from field \"%field%\" will be used to confirm submission to the user.' | trans {field:formitem.data.user_email_field} }}</div> <div class=\"uk-alert uk-alert-warning\" v-show=!formitem.data.user_email_field> {{ 'No email field is selected for user confirmation mail.' | trans }}</div> <div class=uk-form-row> <label for=form-submitemail class=uk-form-label>{{ 'Email copy of submission to' | trans }}</label> <div class=uk-form-controls> <input id=form-submitemail class=uk-form-width-large type=text name=submitemail v-model=formitem.data.submitEmail v-validate:email v-validate:required=!!formitem.data.user_email_field> <p class=\"uk-form-help-block uk-text-danger\" v-show=form.submitemail.invalid>{{ 'Please enter valid email address' | trans }}</p> <p class=\"uk-form-help-block uk-text-danger\" v-show=\"formitem.data.user_email_field && !formitem.data.submitEmail\"> {{ 'No email will be sent to the user when no address is entered here!' | trans }}</p> </div> </div> <div class=uk-form-row> <label for=form-emailsubject class=uk-form-label>{{ 'Email subject' | trans }}</label> <div class=uk-form-controls> <input id=form-emailsubject class=uk-form-width-large type=text name=emailsubject v-model=formitem.data.email_subject> </div> </div> <div class=uk-form-row> <v-editor id=formitem-emailbody :value.sync=formitem.data.email_body :options=\"{markdown : formitem.data.email_body_markdown}\"></v-editor> <p> <label><input type=checkbox v-model=formitem.data.email_body_markdown> {{ 'Enable Markdown' | trans }}</label> </p> </div> </div> <div class=uk-width-medium-1-4> <formfieldslist :fields=formfields></formfieldslist> </div> </div> </div>"},function(e,t){e.exports='<div> <div class=uk-alert v-show=!formitem.id>{{ \'Save form before adding fields.\' | trans }}</div> <div class="uk-margin uk-flex uk-flex-space-between uk-flex-wrap" data-uk-margin v-show=formitem.id> <div class="uk-flex uk-flex-middle uk-flex-wrap" data-uk-margin> <div class=uk-margin-left v-show=selected.length> <ul class="uk-subnav pk-subnav-icon"> <li><a class="pk-icon-delete pk-icon-hover" title="{{ \'Delete\' | trans }}" data-uk-tooltip="{delay: 500}" @click=removeFields v-confirm="\'Delete field?\' | trans"></a> </li> </ul> </div> </div> <div class=uk-position-relative data-uk-margin> <div data-uk-dropdown="{ mode: \'click\' }"> <a class="uk-button uk-button-primary" @click.prevent="">{{ \'Add Field\' | trans }}</a> <div class="uk-dropdown uk-dropdown-small uk-dropdown-flip"> <ul class="uk-nav uk-nav-dropdown"> <li v-for="type in types | orderBy \'label\'"> <a @click.prevent=$root.editFormField(type.id)>{{ type.label }}</a></li> </ul> </div> </div> </div> </div> <div class=uk-overflow-container> <div class="pk-table-fake pk-table-fake-header" :class="{\'pk-table-fake-border\': !fields || !fields.length}"> <div class="pk-table-width-minimum pk-table-fake-nestable-padding"> <input type=checkbox v-check-all:selected.literal="input[name=id]"> </div> <div class=pk-table-min-width-100>{{ \'Label\' | trans }}</div> <div class="pk-table-width-100 uk-text-center">{{ \'Required\' | trans }}</div> <div class=pk-table-width-150>{{ \'Type\' | trans }}</div> </div> <ul class="uk-nestable uk-margin-remove" v-el:nestable v-show=fields.length> <form-field v-for="field in fields | orderBy \'priority\'" :field=field></form-field> </ul> </div> <h3 class="uk-h1 uk-text-muted uk-text-center" v-show="fields && !fields.length">{{ \'No fields found.\' | trans }}</h3> <script id=field type=text/template><li class="uk-nestable-item" :class="{\'uk-active\': $parent.isSelected(field)}" data-id="{{ field.id }}">\n\n            <div class="uk-nestable-panel pk-table-fake uk-form uk-visible-hover">\n                <div class="pk-table-width-minimum pk-table-collapse">\n                    <div class="uk-nestable-toggle" data-nestable-action="toggle"></div>\n                </div>\n                <div class="pk-table-width-minimum"><input type="checkbox" name="id" value="{{ field.id }}"\n                                                           @click="toggleSelect(field)"></div>\n                <div class="pk-table-min-width-100">\n                    <a v-if="type" @click.prevent="$root.editFormField(field.id)">{{ field.label }}</a>\n                    <span v-else>{{ field.label }}</span>\n                    <br/><small class="uk-text-muted">{{ field.slug }}</small>\n                </div>\n                <div class="pk-table-width-100 uk-text-center">\n                    <td class="uk-text-center">\n                        <a :class="{\'pk-icon-circle-danger\': !field.data.required, \'pk-icon-circle-success\': field.data.required}"\n                           @click.prevent="$parent.toggleRequired(field)"></a>\n                    </td>\n                </div>\n                <div class="pk-table-width-150 pk-table-max-width-150 uk-text-truncate">\n                    <span v-if="type">{{ type.label }}</span>\n                    <span v-else class="uk-text-danger">{{ field.type }}: {{ \'type not found!\' | trans}}</span>\n                </div>\n            </div>\n\n\n        </li></script> </div>'},function(e,t){e.exports="<h3>{{ 'Available variables' | trans }}</h3> <ul class=\"uk-list uk-list-line\"> <li v-for=\"field in fields\"> <kbd>{{ field.slug | shortcode 'label' }}</kbd><br> <kbd>{{ field.slug | shortcode 'value' }}</kbd> </li> <li> <kbd v-for=\"key in ['id', 'form_id', 'email', 'ip', 'created']\" class=\"uk-display-block uk-margin-small-bottom\"> {{ 'submission' | shortcode key }}</kbd> </li> </ul>"},function(e,t){e.exports="<div class=\"uk-form-horizontal uk-margin\"> <div class=uk-grid> <div class=uk-width-medium-3-4> <div class=uk-form-row> <label for=form-formstyle class=uk-form-label>{{ 'After submit' | trans }}</label> <div class=uk-form-controls> <select id=form-formstyle class=uk-form-width-large v-model=formitem.data.afterSubmit> <option value=thankyou>{{ 'Show Thank you message' | trans }}</option> <option value=redirect>{{ 'Redirect to page' | trans }}</option> </select> </div> </div> <div class=uk-form-row v-show=\"formitem.data.afterSubmit == 'thankyou'\"> <v-editor id=formitem-thankyou :value.sync=formitem.data.thankyou :options=\"{markdown : formitem.data.thankyou_markdown}\"></v-editor> <p> <label><input type=checkbox v-model=formitem.data.thankyou_markdown> {{ 'Enable Markdown' | trans }}</label> </p> </div> <div class=uk-form-row v-show=\"formitem.data.afterSubmit == 'redirect'\"> <label class=uk-form-label>{{ 'Redirect' | trans }}</label> <div class=uk-form-controls> <input-link class=uk-form-width-large :link.sync=formitem.data.redirect></input-link> </div> </div> <div class=uk-form-row> <span class=uk-form-label>{{ 'Google Datalayer' | trans }}</span> <div class=\"uk-form-controls uk-form-controls-text\"> <label> <input type=checkbox v-model=formitem.data.google_datalayer> {{ 'Push event to Google Datalayer' | trans }}</label> </div> </div> </div> <div class=uk-width-medium-1-4> <formfieldslist :fields=formfields></formfieldslist> </div> </div> </div>"},,,,,,,,function(e,t,i){var s,o;s=i(3),o=i(20),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t,i){var s,o;s=i(4),o=i(21),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t,i){var s,o;s=i(5),o=i(22),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t,i){var s,o;s=i(6),o=i(23),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t,i){var s,o;s=i(7),o=i(24),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t,i){var s,o;s=i(8),o=i(25),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t,i){var s,o;s=i(9),o=i(26),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t,i){var s,o;s=i(10),o=i(27),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)},function(e,t,i){var s,o;s=i(12),o=i(29),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),o&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=o)}]);